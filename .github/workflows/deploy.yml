name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: BookStore-frontend/package-lock.json
    
    # Backend Tests
    - name: Restore .NET dependencies
      run: dotnet restore BookStore.API/BookStore.API.csproj
      
    - name: Build .NET project
      run: dotnet build BookStore.API/BookStore.API.csproj --no-restore
      
    - name: Run .NET tests
      run: dotnet test BookStore.API.Tests/BookStore.API.Tests.csproj --no-build --verbosity normal
    
    # Frontend Build and Deploy
    - name: Install frontend dependencies
      run: |
        cd BookStore-frontend
        npm ci
    
    - name: Build frontend
      run: |
        cd BookStore-frontend
        npm run build
      env:
        VITE_API_BASE_URL: https://bookstore-api.onrender.com/api
        VITE_APP_NAME: BookStore
        VITE_DEPLOYMENT_TARGET: github-pages
    
    - name: Upload build artifacts
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./BookStore-frontend/dist

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
