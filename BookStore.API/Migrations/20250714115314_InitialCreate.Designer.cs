// <auto-generated />
using System;
using BookStore.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookStore.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250714115314_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookStore.API.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("BookStore.API.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PublicationYear")
                        .HasColumnType("integer");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Author");

                    b.HasIndex("Category");

                    b.HasIndex("ISBN");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Title");

                    b.HasIndex("UserId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Jane Austen",
                            Category = "Fiction - Romance",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "A classic romance novel exploring societal expectations and true love in 19th century England.",
                            ISBN = "978-0141439518",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231852-L.jpg",
                            IsDeleted = false,
                            Price = 10.99m,
                            PublicationYear = 1813,
                            Publisher = "Penguin Classics",
                            StockQuantity = 40,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = 2,
                            Author = "John Green",
                            Category = "Fiction - Romance",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Two teenagers with cancer fall in love while navigating life's harsh realities.",
                            ISBN = "978-0525478812",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231863-L.jpg",
                            IsDeleted = false,
                            Price = 12.99m,
                            PublicationYear = 2012,
                            Publisher = "Dutton Books",
                            StockQuantity = 35,
                            Title = "The Fault in Our Stars"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Stieg Larsson",
                            Category = "Fiction - Thriller",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "A journalist and hacker investigate a decades-old disappearance in Sweden.",
                            ISBN = "978-0307454546",
                            ImageUrl = "https://covers.openlibrary.org/b/id/240726-L.jpg",
                            IsDeleted = false,
                            Price = 13.99m,
                            PublicationYear = 2005,
                            Publisher = "Norstedts Förlag",
                            StockQuantity = 30,
                            Title = "The Girl with the Dragon Tattoo"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Gillian Flynn",
                            Category = "Fiction - Thriller",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "A psychological thriller about a marriage gone terribly wrong.",
                            ISBN = "978-0307588371",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8235119-L.jpg",
                            IsDeleted = false,
                            Price = 14.99m,
                            PublicationYear = 2012,
                            Publisher = "Crown Publishing",
                            StockQuantity = 25,
                            Title = "Gone Girl"
                        },
                        new
                        {
                            Id = 5,
                            Author = "J.K. Rowling",
                            Category = "Fiction - Fantasy",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "The first book in the magical series about a young wizard.",
                            ISBN = "978-0590353427",
                            ImageUrl = "https://covers.openlibrary.org/b/id/7984916-L.jpg",
                            IsDeleted = false,
                            Price = 9.99m,
                            PublicationYear = 1997,
                            Publisher = "Scholastic",
                            StockQuantity = 50,
                            Title = "Harry Potter and the Sorcerer's Stone"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Erin Morgenstern",
                            Category = "Fiction - Fantasy",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "A magical competition between two illusionists in a mysterious circus.",
                            ISBN = "978-0307744432",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8235120-L.jpg",
                            IsDeleted = false,
                            Price = 15.99m,
                            PublicationYear = 2011,
                            Publisher = "Doubleday",
                            StockQuantity = 20,
                            Title = "The Night Circus"
                        },
                        new
                        {
                            Id = 13,
                            Author = "Walter Isaacson",
                            Category = "Non-Fiction - Biography",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "The authorized biography of Apple's co-founder.",
                            ISBN = "978-1451648539",
                            ImageUrl = "https://covers.openlibrary.org/b/id/7265441-L.jpg",
                            IsDeleted = false,
                            Price = 18.99m,
                            PublicationYear = 2011,
                            Publisher = "Simon & Schuster",
                            StockQuantity = 15,
                            Title = "Steve Jobs"
                        },
                        new
                        {
                            Id = 14,
                            Author = "Michelle Obama",
                            Category = "Non-Fiction - Biography",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Memoir of the former First Lady of the United States.",
                            ISBN = "978-1524763138",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8235124-L.jpg",
                            IsDeleted = false,
                            Price = 19.99m,
                            PublicationYear = 2018,
                            Publisher = "Crown",
                            StockQuantity = 20,
                            Title = "Becoming"
                        },
                        new
                        {
                            Id = 15,
                            Author = "James Clear",
                            Category = "Non-Fiction - Self-Help",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "A guide to building good habits and breaking bad ones.",
                            ISBN = "978-0735211292",
                            ImageUrl = "https://covers.openlibrary.org/b/id/9259256-L.jpg",
                            IsDeleted = false,
                            Price = 16.99m,
                            PublicationYear = 2018,
                            Publisher = "Avery",
                            StockQuantity = 25,
                            Title = "Atomic Habits"
                        },
                        new
                        {
                            Id = 16,
                            Author = "Yuval Noah Harari",
                            Category = "Non-Fiction - History",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Exploration of human history from evolution to modern society.",
                            ISBN = "978-0062316097",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231857-L.jpg",
                            IsDeleted = false,
                            Price = 19.99m,
                            PublicationYear = 2011,
                            Publisher = "Harper",
                            StockQuantity = 20,
                            Title = "Sapiens: A Brief History of Humankind"
                        },
                        new
                        {
                            Id = 17,
                            Author = "David Grann",
                            Category = "Non-Fiction - History",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "The Osage murders and birth of the FBI.",
                            ISBN = "978-0385534246",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8235125-L.jpg",
                            IsDeleted = false,
                            Price = 17.99m,
                            PublicationYear = 2017,
                            Publisher = "Doubleday",
                            StockQuantity = 15,
                            Title = "Killers of the Flower Moon"
                        },
                        new
                        {
                            Id = 18,
                            Author = "Barack Obama",
                            Category = "Non-Fiction - Politics",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Thoughts on reclaiming the American dream.",
                            ISBN = "978-0307237705",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231858-L.jpg",
                            IsDeleted = false,
                            Price = 14.99m,
                            PublicationYear = 2006,
                            Publisher = "Crown",
                            StockQuantity = 18,
                            Title = "The Audacity of Hope"
                        },
                        new
                        {
                            Id = 19,
                            Author = "Truman Capote",
                            Category = "Non-Fiction - True Crime",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "True crime classic about the Clutter family murders.",
                            ISBN = "978-0679745587",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231859-L.jpg",
                            IsDeleted = false,
                            Price = 13.99m,
                            PublicationYear = 1966,
                            Publisher = "Vintage",
                            StockQuantity = 12,
                            Title = "In Cold Blood"
                        },
                        new
                        {
                            Id = 20,
                            Author = "Rick Warren",
                            Category = "Non-Fiction - Religion",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Spiritual guide to finding purpose through faith.",
                            ISBN = "978-0310337508",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231860-L.jpg",
                            IsDeleted = false,
                            Price = 12.99m,
                            PublicationYear = 2002,
                            Publisher = "Zondervan",
                            StockQuantity = 14,
                            Title = "The Purpose Driven Life"
                        },
                        new
                        {
                            Id = 21,
                            Author = "Eric Carle",
                            Category = "Children & Teens - Picture Books",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "A caterpillar eats his way through various foods.",
                            ISBN = "978-0399226908",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231861-L.jpg",
                            IsDeleted = false,
                            Price = 8.99m,
                            PublicationYear = 1969,
                            Publisher = "Philomel Books",
                            StockQuantity = 30,
                            Title = "The Very Hungry Caterpillar"
                        },
                        new
                        {
                            Id = 22,
                            Author = "Rick Riordan",
                            Category = "Children & Teens - Middle Grade",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "A modern demigod discovers his divine heritage.",
                            ISBN = "978-0786838653",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231862-L.jpg",
                            IsDeleted = false,
                            Price = 9.99m,
                            PublicationYear = 2005,
                            Publisher = "Disney-Hyperion",
                            StockQuantity = 22,
                            Title = "Percy Jackson & the Olympians: The Lightning Thief"
                        },
                        new
                        {
                            Id = 23,
                            Author = "R.J. Palacio",
                            Category = "Children & Teens - Middle Grade",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "A boy with facial differences attends mainstream school.",
                            ISBN = "978-0375869020",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8235126-L.jpg",
                            IsDeleted = false,
                            Price = 10.99m,
                            PublicationYear = 2012,
                            Publisher = "Knopf",
                            StockQuantity = 18,
                            Title = "Wonder"
                        },
                        new
                        {
                            Id = 24,
                            Author = "Angie Thomas",
                            Category = "Children & Teens - Young Adult",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "A teen witnesses police shooting her childhood friend.",
                            ISBN = "978-0062498533",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8235127-L.jpg",
                            IsDeleted = false,
                            Price = 12.99m,
                            PublicationYear = 2017,
                            Publisher = "Balzer + Bray",
                            StockQuantity = 20,
                            Title = "The Hate U Give"
                        },
                        new
                        {
                            Id = 25,
                            Author = "Veronica Roth",
                            Category = "Children & Teens - Young Adult",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Dystopian Chicago where society is divided into factions.",
                            ISBN = "978-0062024039",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8235128-L.jpg",
                            IsDeleted = false,
                            Price = 11.99m,
                            PublicationYear = 2011,
                            Publisher = "Katherine Tegen Books",
                            StockQuantity = 16,
                            Title = "Divergent"
                        },
                        new
                        {
                            Id = 26,
                            Author = "Stephen Hawking",
                            Category = "Academic & Textbooks - Science",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Introduction to cosmology for non-specialists.",
                            ISBN = "978-0553380163",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231864-L.jpg",
                            IsDeleted = false,
                            Price = 17.99m,
                            PublicationYear = 1988,
                            Publisher = "Bantam",
                            StockQuantity = 10,
                            Title = "A Brief History of Time"
                        },
                        new
                        {
                            Id = 27,
                            Author = "J.E. Gordon",
                            Category = "Academic & Textbooks - Engineering",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Fundamentals of structural engineering made accessible.",
                            ISBN = "978-0306812837",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231865-L.jpg",
                            IsDeleted = false,
                            Price = 15.99m,
                            PublicationYear = 1978,
                            Publisher = "Da Capo Press",
                            StockQuantity = 8,
                            Title = "Structures: Or Why Things Don't Fall Down"
                        },
                        new
                        {
                            Id = 28,
                            Author = "Siddhartha Mukherjee",
                            Category = "Academic & Textbooks - Medicine",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Biography of cancer spanning centuries of research.",
                            ISBN = "978-1439170915",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231866-L.jpg",
                            IsDeleted = false,
                            Price = 18.99m,
                            PublicationYear = 2010,
                            Publisher = "Scribner",
                            StockQuantity = 7,
                            Title = "The Emperor of All Maladies"
                        },
                        new
                        {
                            Id = 29,
                            Author = "Harper Lee",
                            Category = "Academic & Textbooks - Law",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Exploration of racial injustice and moral growth.",
                            ISBN = "978-0060935467",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8228692-L.jpg",
                            IsDeleted = false,
                            Price = 14.99m,
                            PublicationYear = 1960,
                            Publisher = "J.B. Lippincott & Co.",
                            StockQuantity = 9,
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            Id = 30,
                            Author = "The Princeton Review",
                            Category = "Academic & Textbooks - Test Prep",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Comprehensive SAT preparation guide with practice tests.",
                            ISBN = "978-0525568063",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231867-L.jpg",
                            IsDeleted = false,
                            Price = 21.99m,
                            PublicationYear = 2020,
                            Publisher = "Princeton Review",
                            StockQuantity = 12,
                            Title = "Cracking the SAT"
                        },
                        new
                        {
                            Id = 31,
                            Author = "Masashi Kishimoto",
                            Category = "Comics & Graphic Novels - Manga",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "A young ninja dreams of becoming his village's leader.",
                            ISBN = "978-1569319000",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231868-L.jpg",
                            IsDeleted = false,
                            Price = 9.99m,
                            PublicationYear = 2003,
                            Publisher = "VIZ Media",
                            StockQuantity = 20,
                            Title = "Naruto, Vol. 1"
                        },
                        new
                        {
                            Id = 32,
                            Author = "Frank Miller",
                            Category = "Comics & Graphic Novels - Superhero",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Batman's early crime-fighting days in Gotham City.",
                            ISBN = "978-1401207526",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231869-L.jpg",
                            IsDeleted = false,
                            Price = 12.99m,
                            PublicationYear = 1987,
                            Publisher = "DC Comics",
                            StockQuantity = 15,
                            Title = "Batman: Year One"
                        },
                        new
                        {
                            Id = 33,
                            Author = "Marjane Satrapi",
                            Category = "Comics & Graphic Novels - Indie",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Graphic memoir of growing up during Iranian Revolution.",
                            ISBN = "978-0375714573",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231870-L.jpg",
                            IsDeleted = false,
                            Price = 13.99m,
                            PublicationYear = 2000,
                            Publisher = "Pantheon",
                            StockQuantity = 10,
                            Title = "Persepolis"
                        },
                        new
                        {
                            Id = 34,
                            Author = "Rachel Smythe",
                            Category = "Comics & Graphic Novels - Webtoons",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Modern retelling of Hades and Persephone myth.",
                            ISBN = "978-0593160290",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231871-L.jpg",
                            IsDeleted = false,
                            Price = 16.99m,
                            PublicationYear = 2021,
                            Publisher = "Del Rey",
                            StockQuantity = 8,
                            Title = "Lore Olympus: Volume One"
                        },
                        new
                        {
                            Id = 35,
                            Author = "Samin Nosrat",
                            Category = "Lifestyle & Hobbies - Cooking",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Mastering the elements of good cooking.",
                            ISBN = "978-1476753836",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231872-L.jpg",
                            IsDeleted = false,
                            Price = 24.99m,
                            PublicationYear = 2017,
                            Publisher = "Simon & Schuster",
                            StockQuantity = 10,
                            Title = "Salt, Fat, Acid, Heat"
                        },
                        new
                        {
                            Id = 36,
                            Author = "Lonely Planet",
                            Category = "Lifestyle & Hobbies - Travel",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Ranking of the world's top travel experiences.",
                            ISBN = "978-1788689199",
                            ImageUrl = "https://covers.openlibrary.org/b/id/8231873-L.jpg",
                            IsDeleted = false,
                            Price = 29.99m,
                            PublicationYear = 2020,
                            Publisher = "Lonely Planet",
                            StockQuantity = 7,
                            Title = "Lonely Planet's Ultimate Travel List"
                        });
                });

            modelBuilder.Entity("BookStore.API.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId", "BookId")
                        .IsUnique();

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("BookStore.API.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("integer");

                    b.Property<string>("PaymentTransactionId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ShippingAddress")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BookStore.API.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("BookStore.API.Models.UserFavorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId", "BookId")
                        .IsUnique();

                    b.ToTable("UserFavorites");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BookStore.API.Models.Book", b =>
                {
                    b.HasOne("BookStore.API.Models.ApplicationUser", "User")
                        .WithMany("Books")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookStore.API.Models.CartItem", b =>
                {
                    b.HasOne("BookStore.API.Models.Book", "Book")
                        .WithMany("CartItems")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.API.Models.ApplicationUser", "User")
                        .WithMany("CartItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookStore.API.Models.Order", b =>
                {
                    b.HasOne("BookStore.API.Models.ApplicationUser", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookStore.API.Models.OrderItem", b =>
                {
                    b.HasOne("BookStore.API.Models.Book", "Book")
                        .WithMany("OrderItems")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.API.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BookStore.API.Models.UserFavorite", b =>
                {
                    b.HasOne("BookStore.API.Models.Book", "Book")
                        .WithMany("Favorites")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.API.Models.ApplicationUser", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BookStore.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BookStore.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BookStore.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookStore.API.Models.ApplicationUser", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("CartItems");

                    b.Navigation("Favorites");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BookStore.API.Models.Book", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Favorites");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("BookStore.API.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
