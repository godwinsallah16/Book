version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: BookStore
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: BookStore123!
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bookstore-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # BookStore API
  bookstore-api:
    build: 
      context: ./BookStore.API
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=BookStore;Username=postgres;Password=BookStore123!
      - JwtSettings__Secret=BookStore-Super-Secret-Key-For-JWT-Tokens-2024-Must-Be-At-Least-256-Bits-Long
      - JwtSettings__Issuer=BookStore.API
      - JwtSettings__Audience=BookStore.Client
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bookstore-network
    restart: unless-stopped

  # BookStore Frontend
  bookstore-frontend:
    build:
      context: ./BookStore-frontend
      dockerfile: Dockerfile
    environment:
      - VITE_API_BASE_URL=http://localhost:5000/api
    ports:
      - "80:80"
    depends_on:
      - bookstore-api
    networks:
      - bookstore-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  bookstore-network:
    driver: bridge
